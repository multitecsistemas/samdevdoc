{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bem vindo","text":"<p>Bem vindo \u00e0 documenta\u00e7\u00e3o para desenvolvedores do ERP SAM.</p> <p>Saiba Mais</p> <p>Para conhecer mais, visite o site oficial do SAM. </p>"},{"location":"#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este documento tem como finalidade apresentar as diferentes formas de cutomiza\u00e7\u00e3o de processos e integra\u00e7\u00e3o com os recursos e funcionalidades do ERP SAM, por exemplo, ao inserir um registro no sistema h\u00e1 a posiblidade de inferir neste processo realizando cr\u00edticas/retri\u00e7\u00f5es. O SAM \u00e9 um sistema totalmente adapt\u00e1vel e pode se enquadrar perfeitamente \u00e0s regras do seu n\u00e9gocio, al\u00e9m de se integrar perfeitamente a outros sistemas atuais do mercado. Aqui veremos como realizar estas customiza\u00e7\u00f5es de processos e integra\u00e7\u00f5es.</p>"},{"location":"#recomendacoes","title":"Recomenda\u00e7\u00f5es","text":"<p>O SAM utiliza como parte de seus componentes algumas bibliotecas e frameworks, antes de come\u00e7ar recomendamos que voc\u00ea leia e entenda um pouco mais sobre elas.</p> <ul> <li>VUE.js</li> <li>ApexCharts</li> <li>Swing</li> </ul>"},{"location":"#linguagens-utilizadas","title":"Linguagens Utilizadas","text":"<p>As customiza\u00e7\u00f5es e integra\u00e7\u00f5es com o SAM s\u00e3o contruidas a partir da linguagem Groovy. O Groovy \u00e9 uma linguagem de programa\u00e7\u00e3o orientada a objetos desenvolvida para a plataforma Java como alternativa \u00e0 linguagem de programa\u00e7\u00e3o Java. Ele possui caracter\u00edsticas de Python, Ruby e Smalltalk. Utiliza uma sintaxe similar \u00e0 de Java, \u00e9 compilada dinamicamente para bytecode Java e integra-se transparentemente com outros c\u00f3digos e bibliotecas Java.</p> <p>Visite a documenta\u00e7\u00e3o do Groovy.</p> <p>Os componentes gr\u00e1ficos renderizados na web s\u00e3o construidos com HTML, CSS e JavaScript, podendo ou n\u00e3o utilizar os componentes dos frameworks que vimos a cima. J\u00e1 os componentes gr\u00e1ficos rederizados em desktop s\u00e3o construidos com Swing.</p>"},{"location":"#como-funciona","title":"Como funciona","text":"<p>Todas as customiza\u00e7\u00f5es e integra\u00e7\u00f5es podem ser construidas a partir do pr\u00f3prio SAM, nele voc\u00ea encontrar\u00e1 uma ferramenta j\u00e1 integrada e pronta para uso chamada SAMDEV, por\u00e9m, tamb\u00e9m podemos cri\u00e1-las a partir de qualquer outro editor de textos, editor de c\u00f3digos ou IDE de sua preferencia.</p> <p>Al\u00e9m do SAMDEV disponibilizamos um projeto base para ser usado em alguma IDE</p> <ul> <li>projeto base </li> </ul>"},{"location":"#requisitos","title":"Requisitos","text":"<p>Para instalar do SAM e utilizar do SAMDEV ou outros Editores/IDEs, devemos instalar os seguintes requisitos:</p> <ul> <li>Java 21</li> <li>PostgreSQL</li> </ul> <p>Nota</p> <p>Visite nosso reposit\u00f3rio para visualizar alguns exemplos que iremos explorar por aqui.  https://github.com/multitecsistemas/sam4</p>"},{"location":"formulas/","title":"Formulas","text":""},{"location":"formulas/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Uma f\u00f3rmula \u00e9 um m\u00e9todo pr\u00e1tico de resolver um assunto, dar instru\u00e7\u00f5es ou expressar uma opera\u00e7\u00e3o. Em algumas tarefas do SAM4 o processamento de dados pode ser feito de forma customizada, ou seja, cada empresa pode processar livremente. Essas customiza\u00e7\u00f5es s\u00e3o feitas atrav\u00e9s das f\u00f3rmulas. Por exemplo, c\u00e1lculo de documentos, c\u00e1lculo de folha de pagamento, manipula\u00e7\u00e3o de valores de itens no estoque.</p>"},{"location":"formulas/#metodos","title":"M\u00e9todos","text":""},{"location":"formulas/#obterempresaativa","title":"<code>obterEmpresaAtiva</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Aac10 contendo os dados da empresa ativa.</p> Exemplo <pre><code>Aac10 aac10 = obterEmpresaAtiva()\n</code></pre>"},{"location":"formulas/#obterusuariologado","title":"<code>obterUsuarioLogado</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Aab10 contendo os dados do usu\u00e1rio logado no sistema.</p> Exemplo <pre><code>Aab10 aab10 = obterUsuarioLogado()\n</code></pre>"},{"location":"formulas/#getacessoaobanco","title":"<code>getAcessoAoBanco</code>","text":"<p>Este m\u00e9todo retorna uma cole\u00e7\u00e3o de m\u00e9todos uteis para manipula\u00e7\u00e3o do banco de dados descritos a baixo:</p> Metodo Descri\u00e7\u00e3o buscarListaDeTableMap Retorna uma lista de <code>TableMap</code> contendo os registros obtidos a partir da execu\u00e7\u00e3o de uma SQL. buscarUnicoTableMap Retorna um \u00fanico <code>TableMap</code> contendo o registro obtido a partir da execu\u00e7\u00e3o de uma SQL. buscarListaDeRegistros Retorna uma lista de registros (entidades) obtidos a partir da execu\u00e7\u00e3o de uma SQL. buscarRegistroUnico Retorna um \u00fanico registro (entidade) obtido a partir da execu\u00e7\u00e3o de uma SQL. buscarMultiResultSet Retorna um objeto <code>MultiResultSet</code> contendo os registros obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterMapDeRegistros Retorna um <code>Map</code> contendo os registros obtidos a partir da execu\u00e7\u00e3o de uma SQL, usando coluna como chave/valor. obterListaDeBigDecimal Retorna uma lista de <code>BigDecimal</code> obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterBigDecimal Retorna um \u00fanico <code>BigDecimal</code> obtido a partir da execu\u00e7\u00e3o de uma SQL. obterListaDeInteger Retorna uma lista de <code>Integer</code> obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterInteger Retorna um \u00fanico <code>Integer</code> obtido a partir da execu\u00e7\u00e3o de uma SQL. obterListaDeDate Retorna uma lista de objetos <code>LocalDate</code> obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterDate Retorna um \u00fanico objeto <code>LocalDate</code> obtido a partir da execu\u00e7\u00e3o de uma SQL. obterListaDeString Retorna uma lista de <code>String</code> obtidas a partir da execu\u00e7\u00e3o de uma SQL. obterString Retorna uma \u00fanica <code>String</code> obtida a partir da execu\u00e7\u00e3o de uma SQL. obterListaDeLong Retorna uma lista de <code>Long</code> obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterLong Retorna um \u00fanico <code>Long</code> obtido a partir da execu\u00e7\u00e3o de uma SQL. buscarRegistroUnicoById Retorna um registro de uma tabela pelo ID informado como argumento. buscarRegistroUnicoByCriterion Retorna um registro de uma tabela filtrado por um <code>Criterion</code>."},{"location":"formulas/#criarparametrosql","title":"<code>criarParametroSql</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Parametro para ser utilizado nos m\u00e9todos que realizam a manipula\u00e7\u00e3o do banco de dados que vimos acima.</p> <p>Argumentos</p> Tipo Descri\u00e7\u00e3o String Chave Object Valor Exemplo <pre><code>String sql = \" SELECT * FROM Abm01 WHERE abm01codigo = :codigo AND abm01tipo = :tipo \"\n\nParametro paramCodigo = criarParametroSql(\"codigo\", \"0101001\")\nParametro paramTipo = criarParametroSql(\"tipo\", 0)\n</code></pre>"},{"location":"formulas/#obterwherepadrao","title":"<code>obterWherePadrao</code>","text":"<p>Este m\u00e9todo retorna um WHERE filtrando pelos Campos Default para ser utilizado em SQLs.</p> <p>Argumentos</p> Tipo Descri\u00e7\u00e3o String Nome da Classe Object Comparador Ex.: WHERE, AND, OR ExemploRetorno <pre><code>String sql = \"SELECT * FROM Eaa01 WHERE eaa01id = 123 \" + obterWherePadrao(\"Eaa01\", \"AND\")\n</code></pre> <pre><code>\"SELECT * FROM Eaa01 WHERE eaa01id = 123 AND eaa01gc IN (1, 2, 3)\"\n</code></pre>"},{"location":"formulas/#selecionaralinhamento","title":"<code>selecionarAlinhamento</code>","text":"<p>O alinhamento de valores permite fazer um alinhamento dos campos de registros contidos em um leiaute, uma f\u00f3rmula, em listagens para alinhar campos livres do sistema (Json), possibilitando usar nas f\u00f3rmulas um nome padronizado. Este m\u00e9todo seleciona qual alinhamento de valores ser\u00e1 utilizado no script</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o String C\u00f3digo do alinhamento Exemplo <pre><code>selecionarAlinhamento(\"0001\")\n</code></pre>"},{"location":"formulas/#getcampo","title":"<code>getCampo</code>","text":"<p>Este m\u00e9todo retorna o campo informado no alinhamento de valores pelo conte\u00fado do registro. Este m\u00e9todo deve ser utilizado ap\u00f3s a utiliza\u00e7\u00e3o do m\u00e9todo <code>selecionarAlinhamento</code></p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o String Registro String Campo Exemplo <pre><code>getCampo(\"C100\", \"ICMS\")\n</code></pre>"},{"location":"formulas/#getsession","title":"<code>getSession</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Session para manipular o banco de dados.</p> Exemplo <pre><code>Session session = getSession()\nsession.persist(xpto)\n</code></pre>"},{"location":"formulas/#interromper","title":"<code>interromper</code>","text":"<p>Este m\u00e9todo lan\u00e7a uma exce\u00e7\u00e3o ao processo, interrompendo-o.</p> Tipo Descri\u00e7\u00e3o String Mensagem a ser exibida Exemplo <pre><code>interromper(\"Voc\u00ea n\u00e3o tem permiss\u00e3o para continuar.\")\n</code></pre>"},{"location":"formulas/#get","title":"get()","text":"<p>Quando uma Listagem \u00e9 executada, alguns dados podem ser enviados para o processo, estes dados s\u00e3o conteudo dos filtros. O envio deste dado \u00e9 feito atrav\u00e9s de um Mapa de chave e valor, para recuperar estes dados utilizamos o m\u00e9todo <code>get()</code> e suas varia\u00e7\u00f5es.</p> <p>Exemplo: Em uma listagem existe um campo de data e foi atribuido o nome <code>dataDeInicio</code>.</p> <pre><code>&lt;m-date label=\"Data de Inicio\" v-model=\"filtros.dataDeInicio\" /&gt;\n</code></pre> <p>Para recuperar o conteudo deste campo a partir do c\u00f3digo groovy utilizamos o m\u00e9todo <code>get()</code>.</p> <pre><code>def dataDeInicio = get(\"dataDeInicio\")\n</code></pre> <p>Este m\u00e9todo por si s\u00f3 retorna um objeto. Contamos com alguma varia\u00e7\u00f5es deste m\u00e9todo que nos trazem os dados j\u00e1 convertidos.</p> M\u00e9todo Retorno M\u00e9todo Retorno getString() Texto getLocalDate() Data getBoolean() Booleano getLocalTime() Hora getInteger() Inteiro getIntervaloDatas() Array de Datas getLong() Longo getListLong() Lista de Longos getBigDecimal() Decimal getListInteger() Lista de Inteiros"},{"location":"relatorios/","title":"Listagens","text":""},{"location":"relatorios/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>A gera\u00e7\u00e3o de listagens \u00e9 uma funcionalidade essencial para apresentar dados de forma estruturada e f\u00e1cil de interpretar, suportando a tomada de decis\u00e3o. Este guia detalha como o sistema realiza a extra\u00e7\u00e3o de informa\u00e7\u00f5es da base de dados, formata listagens e emprega componentes e m\u00e9todos espec\u00edficos para atender \u00e0s necessidades de diversos relat\u00f3rios.</p>"},{"location":"relatorios/#extracao-de-dados","title":"Extra\u00e7\u00e3o de Dados","text":"<p>O processo de Extra\u00e7\u00e3o de Dados consiste em se comunicar com bancos de dados para capturar os registros que ser\u00e3o disponibilizados para gera\u00e7\u00e3o de relat\u00f3rios. Todas as extra\u00e7\u00f5es s\u00e3o realizadas por meio de consultas SQL ou chamadas a procedimentos armazenados, e podem incluir:</p> <ul> <li>Consultas livres</li> <li>Listagens gerais ou filtradas</li> <li>Relat\u00f3rios resumidos ou anal\u00edticos</li> <li>Estat\u00edsticas e m\u00e9tricas customizadas</li> <li>Documentos fiscais e n\u00e3o fiscais</li> </ul> <p>Os dados extra\u00eddos devem ser precisos, atualizados e refletir o estado real do sistema.</p> <p>Fluxo de extra\u00e7\u00e3o:</p> <ol> <li>Defini\u00e7\u00e3o dos par\u00e2metros de consulta (datas, filtros, agrupamentos).</li> <li>Execu\u00e7\u00e3o da query.</li> <li>Valida\u00e7\u00e3o e tratamento dos dados.</li> <li>Convers\u00e3o dos resultados para o formato PDF ou XLS.</li> </ol>"},{"location":"relatorios/#componentes","title":"Componentes","text":"<p>Estes componentes s\u00e3o baseados na sintaxe das tags HTML, s\u00e3o construidos a partir do framework VUE.js e podem ser utilizados para a cria\u00e7\u00e3o de filtros que s\u00e3o utilizados nos processos de Extra\u00e7\u00e3o de Dados.</p>"},{"location":"relatorios/#atributos-default","title":"Atributos Default","text":"<p>Assim como nas tags do HTML os componentes Multitec tamb\u00e9m possuem seus atributos. Todos os componentes por default possuem os seguintes atributos para a sua configura\u00e7\u00e3o.</p> Nome Descri\u00e7\u00e3o Valores Permitidos Valor Default label Label para o campo * - help Texto de ajuda para o campo * - id ID do campo * - wrapperClass Classe (css) para a DIV wrapper do input * - showWrapper Indica se a DIV wrapper do componente ser\u00e1 exibida * - required Indica se esse campo \u00e9 requerido true, false false v-model Nome do componente, utilizado para obter seu valor * -"},{"location":"relatorios/#m-input","title":"<code>m-input</code>","text":"<p>Este componente renderiza um campo <code>input</code> para textos, com os seguintes atributos:</p> Nome Descri\u00e7\u00e3o Valores Permitidos Default type Tipo do conte\u00fado aceito text, integer, decimal, monthYear - <p>Exemplo:</p> <p></p> <pre><code>&lt;m-input type=\"text\" label=\"Campo de texto\" help=\"Campo obrigat\u00f3rio\" v-model=\"filtros.texto\" :required=\"true\" /&gt;\n</code></pre>"},{"location":"relatorios/#m-check","title":"<code>m-check</code>","text":"<p>Este componente renderiza um campo <code>checkbox</code>, com os seguintes atributos:</p> Nome Descri\u00e7\u00e3o Valores Permitidos Valor Default option Define qual o valor ser\u00e1 enviado para o modelo * true inline Define se ser\u00e1 renderizado sem quebra de linha false, true false multiple Agrupa os CheckBox com o mesmo nome em um array false, true false <p>Exemplo:</p> <p></p> <pre><code>&lt;m-check label=\"Marque este campo\" v-model=\"filtros.texto\" :required=\"true\" /&gt;\n</code></pre>"},{"location":"relatorios/#m-radio","title":"<code>m-radio</code>","text":"<p>Este componente renderiza um campo <code>radio</code>, com os seguintes atributos:</p> Nome Descri\u00e7\u00e3o Valores Permitidos Valor Default option Define qual o valor ser\u00e1 enviado para o modelo * true inline Define se ser\u00e1 renderizado sem quebra de linha false, true false <p>Exemplo:</p> <p></p> <pre><code>&lt;m-radio label=\" Marque este campo\" option=\"0\" v-model=\"filtros.texto\" :required=\"true\" /&gt;\n</code></pre>"},{"location":"relatorios/#m-date","title":"<code>m-date</code>","text":"<p>Este componente renderiza um campo <code>input</code> do tipo <code>date</code>, com os seguintes atributos:</p> Nome Descri\u00e7\u00e3o Valores Permitidos Valor Default format Fun\u00e7\u00e3o destinada para a formata\u00e7\u00e3o de datas Function (JavaScript) - min Menor data permitida para o componente dd/MM/yyyy - max Maior data permitida para o componente dd/MM/yyyy - <p>Exemplo:</p> <p></p> <pre><code>&lt;m-date min=\"01/01/2000\" max=\"31/12/2100\" label=\"Selecione uma data\" v-model=\"filtros.data\" :required=\"true\" /&gt;\n</code></pre>"},{"location":"relatorios/#m-date-interval","title":"<code>m-date-interval</code>","text":"<p>Exibe um painel para informar um intervalo de datas, os atributos s\u00e3o iguais aos do m-date.</p> <p>Exemplo:</p> <p></p> <pre><code>&lt;m-date-interval min=\"01/01/2000\" max=\"31/12/2100\" label=\"Selecione duas data\" v-model=\"filtros.data\" :required=\"true\" /&gt;\n</code></pre>"},{"location":"relatorios/#m-selec","title":"<code>m-selec</code>","text":"<p>Exibe um componente que pode ser renderizado como um ComboBox ou como um AutoComplete.</p> Nome Descri\u00e7\u00e3o Valores Permitidos Valor Default multiple Indica se \u00e9 permitido selecionar mais de um elemento true, false false placeholder Texto exibido quando nenhum item est\u00e1 selecionado * - selectFirstOnLoad Seleciona o primeiro elemento quando renderizado true, false false showClearButton Indica ir\u00e1 exibir o bot\u00e3o limpar true, false true options Array de objetos que ser\u00e3o exibidos no ComboBox Array[Object] - adicionaWherePadrao indica se deve adicionar o where padr\u00e3o \u00e0 select true, false true request Define como os dados para o componente ser\u00e3o obtidos Object - <p>Nota</p> <p>Para entender melhor o atributo <code>adicionaWherePadrao</code> veja nosso manual, nos t\u00f3picos: Tabelas, Grupos Centralizadores e Uso dos Registros. </p> <p>Existem duas maneiras de se preencher um ComboBox, atrav\u00e9s de dados fixos ou atrav\u00e9s de registros vindo do banco de dados, veja como realizar estas duas op\u00e7\u00f5es:</p>"},{"location":"relatorios/#atributo-options","title":"Atributo options","text":"<p>Este atributo permite iniciar o componente <code>m-select</code> com algumas op\u00e7\u00f5es default, estas op\u00e7\u00f5es podem ser definidas atrav\u00e9s do atributo <code>options</code>.</p> <p>O Objeto do Array pode ter 3 propriedades:</p> <ul> <li>value: Valor que ser\u00e1 enviado para o model.</li> <li>label: Valor que ser\u00e1 exibido no componente quando selecionado.</li> <li>option: Texto que ser\u00e1 exibido quando a caixa do ComboBox for aberta.</li> </ul> <p>Exemplo:</p> <p></p> HTMLJS <pre><code>&lt;m-select label=\"Op\u00e7\u00f5es\" :multiple=\"false\" placeholder=\"Selecione uma op\u00e7\u00e3o\" :options=\"opcoes\" /&gt;\n</code></pre> <pre><code>const classe = {\n    data: {\n        opcoes: [\n            {value: 0, label: 'Op\u00e7\u00e3o 1', option: 'Selecionado a op\u00e7\u00e3o 1'},\n            {value: 1, label: 'Op\u00e7\u00e3o 2', option: 'Selecionado a op\u00e7\u00e3o 1'},\n            {value: 2, label: 'Op\u00e7\u00e3o 3', option: 'Selecionado a op\u00e7\u00e3o 1'},\n        ] \n    },\n    onLoad: function () {},\n    methods: {}\n}\n</code></pre>"},{"location":"relatorios/#atributo-request","title":"Atributo request","text":"<p>Esse atributo define como os dados para o ComboBox ser\u00e3o obtidos no Servidor.</p> <p>O Objeto do Array pode ter 4 propriedades:</p> <ul> <li>table: Indicando qual a tabela da select.</li> <li>columns: Lista de colunas separadas por virgula.</li> <li>data: Indica se a select conter\u00e1 JOIN ou WHERE.<ul> <li>join: Array definido por chave e valor da seguinte forma:<ul> <li>inner: Indica que o valor referente a chave inner ser\u00e1 implementado como um INNER JOIN.</li> <li>left: Indica que o valor referente a chave left ser\u00e1 implementado como um LEFT JOIN.</li> </ul> </li> <li>where: Array definido por chave e valor da seguinte forma:<ul> <li>nome: Nome do campo a ser constitu\u00eddo com o seu valor no WHERE.</li> <li>valor: Valor a ser comparado no WHERE.</li> </ul> </li> <li>customWhere: String contendo uma condi\u00e7\u00e3o WHERE livre.</li> </ul> </li> <li>iniFimColumn: Por padr\u00e3o o retorno do componente <code>m-select</code> \u00e9 o campo ID da tabela. Esta propriedade altera a coluna que vir\u00e1 no resultado da request.</li> </ul> <p>Exemplo:</p> <p></p> HTMLJS <pre><code>&lt;m-select label=\"Usu\u00e1rios\" :multiple=\"false\" placeholder=\"Selecione uma op\u00e7\u00e3o\" :request=\"request\" /&gt;\n</code></pre> <pre><code>const classe = {\n    data: {\n        request: {\n            table: 'aab10',\n            columns: 'aab10nome, aab10email',\n            data : {\n                 join : { inner : 'aab10emprDefault' , left : 'aab10credSamPalm' }, \n                 where : { aab10user : 'MASTER'},\n                 customWhere : 'AND aab10id = 5000'\n            }\n\n        }\n    },\n    onLoad: function () {},\n    methods: {}\n}\n</code></pre>"},{"location":"relatorios/#m-panel-check-mpms","title":"<code>m-panel-check-mpms</code>","text":"<p>Este componente exibe um painel com 4 Checkbox que s\u00e3o utilizados para filtrar os registros de um <code>m-select</code> por Material, Produto, Mercadoria ou Servi\u00e7o.</p> <p>Nota</p> <p>Para entender melhor o componente <code>m-panel-check-mpms</code> veja nosso manual, no t\u00f3pico: Itens &gt; Tipos de Itens.</p> Nome Descri\u00e7\u00e3o Valores Permitidos Valor Default selectRef Indicando qual o REF do m-select que deseja controlar true, false - showMaterial Indica se ir\u00e1 exibir o check de Material * true showProduto Indica se ir\u00e1 exibir o check de Produto true, false true showMercadoria Indica se ir\u00e1 exibir o check de Mercadoria true, false true showServico Indica se ir\u00e1 exibir o check de Servi\u00e7o true, false true <p>Exemplo:</p> <p></p> HTMLJS <pre><code>&lt;m-panel-check-mpms selectRef=\"selectItem\" /&gt;\n&lt;m-select label=\"Itens\" :multiple=\"false\" ref=\"selectItem\" :request=\"request\" /&gt;\n</code></pre> <pre><code>const classe = {\n    data: {\n        request: {\n            table: 'abm01',\n            columns: 'abm01codigo, abm01na',\n        }\n    },\n    onLoad: function () {},\n    methods: {}\n}\n</code></pre>"},{"location":"relatorios/#m-panel-criterio","title":"<code>m-panel-criterio</code>","text":"<p>Este componente exibe um painel que permite a utiliza\u00e7\u00e3o dos crit\u00e9rios de sele\u00e7\u00e3o nos filtros.</p> <p>Nota</p> <p>Para entender melhor o componente <code>m-panel-criterio</code> veja nosso manual, no t\u00f3pico: Crit\u00e9rios de Sele\u00e7\u00e3o.</p> Nome Descri\u00e7\u00e3o Valores Permitidos Valor Default tipo Informa qual a aplica\u00e7\u00e3o do crit\u00e9rio entidade, item, trabalhador - <p>Exemplo:</p> <p></p> <pre><code>&lt;m-panel-criterio tipo=\"entidade\" v-model='filtros.criterios' /&gt;\n</code></pre>"},{"location":"relatorios/#metodos","title":"M\u00e9todos","text":"<p>Para facilitar o desenvolvimento das listagens o SAM conta com v\u00e1rios m\u00e9todos para realizar os mais diversos tipos de processos.</p> <p>Nota</p> <p>A partir de agora veremos alguns termos que s\u00e3o exclusivos do SAM, recomendamos fortemente que voc\u00ea leia e conhe\u00e7a um pouco mais sobre a estrutura do SAM. Visite nosso manual.</p>"},{"location":"relatorios/#obterempresaativa","title":"<code>obterEmpresaAtiva</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Aac10 contendo os dados da empresa ativa.</p> Exemplo <pre><code>Aac10 aac10 = obterEmpresaAtiva()\n</code></pre>"},{"location":"relatorios/#obterusuariologado","title":"<code>obterUsuarioLogado</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Aab10 contendo os dados do usu\u00e1rio logado no sistema.</p> Exemplo <pre><code>Aab10 aab10 = obterUsuarioLogado()\n</code></pre>"},{"location":"relatorios/#getacessoaobanco","title":"<code>getAcessoAoBanco</code>","text":"<p>Este m\u00e9todo retorna uma cole\u00e7\u00e3o de m\u00e9todos uteis para manipula\u00e7\u00e3o do banco de dados descritos a baixo:</p> Metodo Descri\u00e7\u00e3o buscarListaDeTableMap Retorna uma lista de <code>TableMap</code> contendo os registros obtidos a partir da execu\u00e7\u00e3o de uma SQL. buscarUnicoTableMap Retorna um \u00fanico <code>TableMap</code> contendo o registro obtido a partir da execu\u00e7\u00e3o de uma SQL. buscarListaDeRegistros Retorna uma lista de registros (entidades) obtidos a partir da execu\u00e7\u00e3o de uma SQL. buscarRegistroUnico Retorna um \u00fanico registro (entidade) obtido a partir da execu\u00e7\u00e3o de uma SQL. buscarMultiResultSet Retorna um objeto <code>MultiResultSet</code> contendo os registros obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterMapDeRegistros Retorna um <code>Map</code> contendo os registros obtidos a partir da execu\u00e7\u00e3o de uma SQL, usando coluna como chave/valor. obterListaDeBigDecimal Retorna uma lista de <code>BigDecimal</code> obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterBigDecimal Retorna um \u00fanico <code>BigDecimal</code> obtido a partir da execu\u00e7\u00e3o de uma SQL. obterListaDeInteger Retorna uma lista de <code>Integer</code> obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterInteger Retorna um \u00fanico <code>Integer</code> obtido a partir da execu\u00e7\u00e3o de uma SQL. obterListaDeDate Retorna uma lista de objetos <code>LocalDate</code> obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterDate Retorna um \u00fanico objeto <code>LocalDate</code> obtido a partir da execu\u00e7\u00e3o de uma SQL. obterListaDeString Retorna uma lista de <code>String</code> obtidas a partir da execu\u00e7\u00e3o de uma SQL. obterString Retorna uma \u00fanica <code>String</code> obtida a partir da execu\u00e7\u00e3o de uma SQL. obterListaDeLong Retorna uma lista de <code>Long</code> obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterLong Retorna um \u00fanico <code>Long</code> obtido a partir da execu\u00e7\u00e3o de uma SQL. buscarRegistroUnicoById Retorna um registro de uma tabela pelo ID informado como argumento. buscarRegistroUnicoByCriterion Retorna um registro de uma tabela filtrado por um <code>Criterion</code>."},{"location":"relatorios/#criarparametrosql","title":"<code>criarParametroSql</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Parametro para ser utilizado nos m\u00e9todos que realizam a manipula\u00e7\u00e3o do banco de dados que vimos acima.</p> <p>Argumentos</p> Tipo Descri\u00e7\u00e3o String Chave Object Valor Exemplo <pre><code>String sql = \" SELECT * FROM Abm01 WHERE abm01codigo = :codigo AND abm01tipo = :tipo \"\n\nParametro paramCodigo = criarParametroSql(\"codigo\", \"0101001\")\nParametro paramTipo = criarParametroSql(\"tipo\", 0)\n</code></pre>"},{"location":"relatorios/#obterwherepadrao","title":"<code>obterWherePadrao</code>","text":"<p>Este m\u00e9todo retorna um WHERE filtrando pelos Campos Default para ser utilizado em SQLs.</p> <p>Argumentos</p> Tipo Descri\u00e7\u00e3o String Nome da Classe Object Comparador Ex.: WHERE, AND, OR ExemploRetorno <pre><code>String sql = \"SELECT * FROM Eaa01 WHERE eaa01id = 123 \" + obterWherePadrao(\"Eaa01\", \"AND\")\n</code></pre> <pre><code>\"SELECT * FROM Eaa01 WHERE eaa01id = 123 AND eaa01gc IN (1, 2, 3)\"\n</code></pre>"},{"location":"relatorios/#selecionaralinhamento","title":"<code>selecionarAlinhamento</code>","text":"<p>O alinhamento de valores permite fazer um alinhamento dos campos de registros contidos em um leiaute, uma f\u00f3rmula, em listagens para alinhar campos livres do sistema (Json), possibilitando usar nas f\u00f3rmulas um nome padronizado. Este m\u00e9todo seleciona qual alinhamento de valores ser\u00e1 utilizado no script</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o String C\u00f3digo do alinhamento Exemplo <pre><code>selecionarAlinhamento(\"0001\")\n</code></pre>"},{"location":"relatorios/#getcampo","title":"<code>getCampo</code>","text":"<p>Este m\u00e9todo retorna o campo informado no alinhamento de valores pelo conte\u00fado do registro. Este m\u00e9todo deve ser utilizado ap\u00f3s a utiliza\u00e7\u00e3o do m\u00e9todo <code>selecionarAlinhamento</code></p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o String Registro String Campo Exemplo <pre><code>getCampo(\"C100\", \"ICMS\")\n</code></pre>"},{"location":"relatorios/#getsession","title":"<code>getSession</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Session para manipular o banco de dados.</p> Exemplo <pre><code>Session session = getSession()\nsession.persist(xpto)\n</code></pre>"},{"location":"relatorios/#interromper","title":"<code>interromper</code>","text":"<p>Este m\u00e9todo lan\u00e7a uma exce\u00e7\u00e3o ao processo, interrompendo-o.</p> Tipo Descri\u00e7\u00e3o String Mensagem a ser exibida Exemplo <pre><code>interromper(\"Voc\u00ea n\u00e3o tem permiss\u00e3o para continuar.\")\n</code></pre>"},{"location":"relatorios/#get","title":"get()","text":"<p>Quando uma Listagem \u00e9 executada, alguns dados podem ser enviados para o processo, estes dados s\u00e3o conteudo dos filtros. O envio deste dado \u00e9 feito atrav\u00e9s de um Mapa de chave e valor, para recuperar estes dados utilizamos o m\u00e9todo <code>get()</code> e suas varia\u00e7\u00f5es.</p> <p>Exemplo: Em uma listagem existe um campo de data e foi atribuido o nome <code>dataDeInicio</code>.</p> <pre><code>&lt;m-date label=\"Data de Inicio\" v-model=\"filtros.dataDeInicio\" /&gt;\n</code></pre> <p>Para recuperar o conteudo deste campo a partir do c\u00f3digo groovy utilizamos o m\u00e9todo <code>get()</code>.</p> <pre><code>def dataDeInicio = get(\"dataDeInicio\")\n</code></pre> <p>Este m\u00e9todo por si s\u00f3 retorna um objeto. Contamos com alguma varia\u00e7\u00f5es deste m\u00e9todo que nos trazem os dados j\u00e1 convertidos.</p> M\u00e9todo Retorno M\u00e9todo Retorno getString() Texto getLocalDate() Data getBoolean() Booleano getLocalTime() Hora getInteger() Inteiro getIntervaloDatas() Array de Datas getLong() Longo getListLong() Lista de Longos getBigDecimal() Decimal getListInteger() Lista de Inteiros"},{"location":"relatorios/#trunc","title":"<code>trunc</code>","text":"<p>Este metodo trunca um valor Decimal para a quantidade de casas definido no argumento.</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o BigDecimal Dicimal a arredondar int Casas decimais ExemploRetorno <pre><code>BigDecimal decimal = 12.8867899\nBigDecimal duasCasas = trunc(decimal, 3)\n</code></pre> <pre><code>12.886\n</code></pre>"},{"location":"scripts/","title":"Scripts de Opera\u00e7\u00e3o","text":""},{"location":"scripts/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Dentre os Script do SAM o Script de Opera\u00e7\u00f5es \u00e9 o \u00fanico que n\u00e3o \u00e9 desenvolvido pela ferramenta SAMDEV, ele \u00e9 constru\u00eddo dentro da pr\u00f3pria tarefa. Com ele o desenvolvedor pode criar regras operacionais diferentes para cada tarefa, manipular campos da tela, fazer valida\u00e7\u00f5es etc. Basicamente o desenvolvedor consegue manipular toda a tarefa. As telas do SAM s\u00e3o constru\u00eddas em JAVA com SWING, Swing \u00e9 um widget toolkit GUI para uso com o Java. Ele possui alguns componentes como, Campo texto, campo num\u00e9rico, campo combo, etc. Cada um destes componentes possuem algumas propriedades que podem ser alteradas para configurar tamanho, largura, altura, cor, fonte, etc.</p> <p>Um Script de Opera\u00e7\u00e3o permite a manipula\u00e7\u00e3o dos componentes de tela do SAM, interferir em a\u00e7\u00f5es ou processos ou at\u00e9 mesmo criar componentes, a\u00e7\u00f5es ou processos customizados.</p> <p>Os componentes de tela do SAM s\u00e3o construidos a partir de componentes <code>Swing</code>, sendo assim, os m\u00e9todos aplicaveis aos componentes swing s\u00e3o aplicados aos componentes do SAM.</p> <p>As tarefas do SAM s\u00e3o divididas em dois tipos:</p> <ol> <li>Cadastros</li> <li>Processos</li> </ol> <p>Saiba Mais</p> <p>Para conhecer mais, veja alguns exemplos. </p>"},{"location":"scripts/#metodos","title":"M\u00e9todos","text":""},{"location":"scripts/#execute","title":"<code>execute</code>","text":"<p>Dispon\u00edvel por padr\u00e3o em todos os scripts, sendo executado antes da tarefa ser aberta, nele ser\u00e3o feitas as altera\u00e7\u00f5es em componentes visuais ou processos da tela.</p> Exemplo <pre><code>@Override \npublic void execute(MultitecRootPanel panel) {\n}\n</code></pre>"},{"location":"scripts/#presalvar","title":"<code>preSalvar</code>","text":"<p>Dispon\u00edvel por padr\u00e3o nos scripts das tarefas de cadastro, sendo executado nos cadastros sempre que o usu\u00e1rio salvar (F9) um registro.</p> Exemplo <pre><code>@Override \npublic void preSalvar(boolean salvo) {\n}\n</code></pre>"},{"location":"scripts/#possalvar","title":"<code>posSalvar</code>","text":"<p>Dispon\u00edvel por padr\u00e3o nos scripts das tarefas de cadastro, sendo executado nos cadastros ap\u00f3s o usu\u00e1rio salvar (F9) um registro.</p> Exemplo <pre><code>@Override \npublic void posSalvar(Long id) {\n}\n</code></pre>"},{"location":"scripts/#exibirinformacao","title":"<code>exibirInformacao</code>","text":"<p>Exibir em uma tela uma mensagem apenas informativa.</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o String Mensagem a ser exibida Exemplo <pre><code>exibirInformacao(\"Ol\u00e1 Mundo!\")\n</code></pre>"},{"location":"scripts/#exibiratencao","title":"<code>exibirAtencao</code>","text":"<p>Exibir em uma tela uma mensagem de alerta/aten\u00e7\u00e3o por\u00e9m sem interromper o processo.</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o String Mensagem a ser exibida Exemplo <pre><code>exibirAtencao(\"O saldo da conta corrente est\u00e1 negativo.\")\n</code></pre>"},{"location":"scripts/#exibirquestao","title":"<code>exibirQuestao</code>","text":"<p>Exibir em uma tela uma quest\u00e3o com dois bot\u00f5es [SIM, N\u00c3O] retornando [false] para [N\u00c3O] e [true] para [SIM].</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o String Mensagem a ser exibida Exemplo <pre><code>boolean resposta = exibirQuestao(\"Deseja continuar o processo?\")\n</code></pre>"},{"location":"scripts/#interromper","title":"<code>interromper</code>","text":"<p>Este m\u00e9todo lan\u00e7a uma exce\u00e7\u00e3o ao processo, interrompendo-o.</p> Tipo Descri\u00e7\u00e3o String Mensagem a ser exibida Exemplo <pre><code>interromper(\"Voc\u00ea n\u00e3o tem permiss\u00e3o para continuar.\")\n</code></pre>"},{"location":"scripts/#executarconsulta","title":"<code>executarConsulta</code>","text":"<p>Executa a SQL informada no banco de dados, retornando uma lista de TableMap.</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o String SQL a ser executada no banco de dados Exemplo <pre><code>List&lt;TableMap&gt; resultados = executarConsulta(\"SELECT * FROM Abh80 LIMIT 1\")\n</code></pre>"},{"location":"scripts/#executarsalvarouexcluir","title":"<code>executarSalvarOuExcluir</code>","text":"<p>Executa uma SQL sem retorno, ou seja, apenas uma SQL para salvar (INSERT/UPDATE) ou excluir (DELETE) um registro no banco de dados.</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o String SQL a ser executada no banco de dados Exemplo <pre><code>executarSalvarOuExcluir(\"UPDATE Abh80 SET abh80nome = 'Jos\u00e9')\n</code></pre>"},{"location":"scripts/#ocultarcolunas","title":"<code>ocultarColunas</code>","text":"<p>Oculta uma coluna de uma determinada Spread (Tabela) da tela.</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o MSpread Spread que ter\u00e1 as colunas ocultas int \u00cdndice das colunas que ser\u00e3o ocultas separadas por virgula Exemplo <pre><code>MSpread spread = getComponente(\"nomeSpread\")\nocultarColunas(spread, 0, 3, 5, 10)\n</code></pre>"},{"location":"scripts/#criarmenu","title":"<code>criarMenu</code>","text":"<p>Cria um menu na parte superior da tarefa</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o String Nome do Menu String Nome do Item do Menu ActionListener Ffun\u00e7\u00e3o que ser\u00e1 executada ao clicar no menu KeyStroke Atalho no teclado para chamar o menu Exemplo <pre><code>criarMenu(\"Valida\u00e7\u00f5es\", \"Validar Item\", e -&gt; validarItem(), null);\n</code></pre>"},{"location":"scripts/#alterartamanhotela","title":"<code>alterarTamanhoTela</code>","text":"<p>Altera a altura e a largura da tela somando os valores recebido como argumento ao tamanho original.</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o int Largura que a tela ser\u00e1 alterada int Altura que a tela ser\u00e1 alterada Exemplo <pre><code>alterarTamanhoTela(10, 50)\n</code></pre>"},{"location":"scripts/#obterempresaativa","title":"<code>obterEmpresaAtiva</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Aac10 contendo os dados da empresa ativa.</p> Exemplo <pre><code>Aac10 aac10 = obterEmpresaAtiva()\n</code></pre>"},{"location":"scripts/#obterusuariologado","title":"<code>obterUsuarioLogado</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Aab10 contendo os dados do usu\u00e1rio logado no sistema.</p> Exemplo <pre><code>Aab10 aab10 = obterUsuarioLogado()\n</code></pre>"},{"location":"scripts/#obterwherepadrao","title":"<code>obterWherePadrao</code>","text":"<p>Este m\u00e9todo retorna um WHERE filtrando pelos Campos Default para ser utilizado em SQLs.</p> <p>Argumentos</p> Tipo Descri\u00e7\u00e3o String Nome da Classe Object Comparador Ex.: WHERE, AND, OR ExemploRetorno <pre><code>String sql = \"SELECT * FROM Eaa01 WHERE eaa01id = 123 \" + obterWherePadrao(\"Eaa01\", \"AND\")\n</code></pre> <pre><code>\"SELECT * FROM Eaa01 WHERE eaa01id = 123 AND eaa01gc IN (1, 2, 3)\"\n</code></pre>"},{"location":"servlet/","title":"Servlet","text":""},{"location":"servlet/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Uma Servlet d\u00e1 uma ideia de servidor pequeno cujo objetivo basicamente \u00e9 receber requisi\u00e7\u00f5es HTTP, process\u00e1-las e responder ao cliente, essa resposta pode ser um JSON, um HTML, uma imagem etc.</p>"},{"location":"servlet/#hearders","title":"Hearders","text":"Nome Valor Fun\u00e7\u00e3o Requerido api-user-header Chave da API do SAM Autenticar a requisi\u00e7\u00e3o SIM ignore-body-decrypt <code>true</code> ou <code>false</code> ignora a criptografia do corpo da requisi\u00e7\u00e3o N\u00c3O <p>Saiba Mais</p> <p>Para conhecer mais, veja alguns exemplos. </p>"},{"location":"servlet/#metodos","title":"M\u00e9todos","text":""},{"location":"servlet/#obterempresaativa","title":"<code>obterEmpresaAtiva</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Aac10 contendo os dados da empresa ativa.</p> Exemplo <pre><code>Aac10 aac10 = obterEmpresaAtiva()\n</code></pre>"},{"location":"servlet/#obterusuariologado","title":"<code>obterUsuarioLogado</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Aab10 contendo os dados do usu\u00e1rio logado no sistema.</p> Exemplo <pre><code>Aab10 aab10 = obterUsuarioLogado()\n</code></pre>"},{"location":"servlet/#getacessoaobanco","title":"<code>getAcessoAoBanco</code>","text":"<p>Este m\u00e9todo retorna uma cole\u00e7\u00e3o de m\u00e9todos uteis para manipula\u00e7\u00e3o do banco de dados descritos a baixo:</p> Metodo Descri\u00e7\u00e3o buscarListaDeTableMap Retorna uma lista de <code>TableMap</code> contendo os registros obtidos a partir da execu\u00e7\u00e3o de uma SQL. buscarUnicoTableMap Retorna um \u00fanico <code>TableMap</code> contendo o registro obtido a partir da execu\u00e7\u00e3o de uma SQL. buscarListaDeRegistros Retorna uma lista de registros (entidades) obtidos a partir da execu\u00e7\u00e3o de uma SQL. buscarRegistroUnico Retorna um \u00fanico registro (entidade) obtido a partir da execu\u00e7\u00e3o de uma SQL. buscarMultiResultSet Retorna um objeto <code>MultiResultSet</code> contendo os registros obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterMapDeRegistros Retorna um <code>Map</code> contendo os registros obtidos a partir da execu\u00e7\u00e3o de uma SQL, usando coluna como chave/valor. obterListaDeBigDecimal Retorna uma lista de <code>BigDecimal</code> obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterBigDecimal Retorna um \u00fanico <code>BigDecimal</code> obtido a partir da execu\u00e7\u00e3o de uma SQL. obterListaDeInteger Retorna uma lista de <code>Integer</code> obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterInteger Retorna um \u00fanico <code>Integer</code> obtido a partir da execu\u00e7\u00e3o de uma SQL. obterListaDeDate Retorna uma lista de objetos <code>LocalDate</code> obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterDate Retorna um \u00fanico objeto <code>LocalDate</code> obtido a partir da execu\u00e7\u00e3o de uma SQL. obterListaDeString Retorna uma lista de <code>String</code> obtidas a partir da execu\u00e7\u00e3o de uma SQL. obterString Retorna uma \u00fanica <code>String</code> obtida a partir da execu\u00e7\u00e3o de uma SQL. obterListaDeLong Retorna uma lista de <code>Long</code> obtidos a partir da execu\u00e7\u00e3o de uma SQL. obterLong Retorna um \u00fanico <code>Long</code> obtido a partir da execu\u00e7\u00e3o de uma SQL. buscarRegistroUnicoById Retorna um registro de uma tabela pelo ID informado como argumento. buscarRegistroUnicoByCriterion Retorna um registro de uma tabela filtrado por um <code>Criterion</code>."},{"location":"servlet/#criarparametrosql","title":"<code>criarParametroSql</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Parametro para ser utilizado nos m\u00e9todos que realizam a manipula\u00e7\u00e3o do banco de dados que vimos acima.</p> <p>Argumentos</p> Tipo Descri\u00e7\u00e3o String Chave Object Valor Exemplo <pre><code>String sql = \" SELECT * FROM Abm01 WHERE abm01codigo = :codigo AND abm01tipo = :tipo \"\n\nParametro paramCodigo = criarParametroSql(\"codigo\", \"0101001\")\nParametro paramTipo = criarParametroSql(\"tipo\", 0)\n</code></pre>"},{"location":"servlet/#obterwherepadrao","title":"<code>obterWherePadrao</code>","text":"<p>Este m\u00e9todo retorna um WHERE filtrando pelos Campos Default para ser utilizado em SQLs.</p> <p>Argumentos</p> Tipo Descri\u00e7\u00e3o String Nome da Classe Object Comparador Ex.: WHERE, AND, OR ExemploRetorno <pre><code>String sql = \"SELECT * FROM Eaa01 WHERE eaa01id = 123 \" + obterWherePadrao(\"Eaa01\", \"AND\")\n</code></pre> <pre><code>\"SELECT * FROM Eaa01 WHERE eaa01id = 123 AND eaa01gc IN (1, 2, 3)\"\n</code></pre>"},{"location":"servlet/#getsession","title":"<code>getSession</code>","text":"<p>Este m\u00e9todo retorna um objeto do tipo Session para manipular o banco de dados.</p> Exemplo <pre><code>Session session = getSession()\nsession.persist(xpto)\n</code></pre>"},{"location":"servlet/#interromper","title":"<code>interromper</code>","text":"<p>Este m\u00e9todo lan\u00e7a uma exce\u00e7\u00e3o ao processo, interrompendo-o.</p> Tipo Descri\u00e7\u00e3o String Mensagem a ser exibida Exemplo <pre><code>interromper(\"Voc\u00ea n\u00e3o tem permiss\u00e3o para continuar.\")\n</code></pre>"},{"location":"servlet/#convertercorporequisicaoparastring","title":"<code>converterCorpoRequisicaoParaString</code>","text":"<p>Este m\u00e9todo converte o corpo da requisi\u00e7\u00e3o enviado a um Servlet para String.</p> Exemplo <pre><code>String body = converterCorpoRequisicaoParaString()\n</code></pre>"},{"location":"servlet/#convertercorporequisicaoparaobjeto","title":"<code>converterCorpoRequisicaoParaObjeto</code>","text":"<p>Este m\u00e9todo converte o corpo da requisi\u00e7\u00e3o enviado a um Servlet para um objeto do tipo informado como argumento.</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o Class&lt;?&gt; Tipo do objeto que ser\u00e1 convertido Exemplo <pre><code>TableMap body = converterCorpoRequisicaoParaObjeto(TableMap.class)\n</code></pre>"},{"location":"servlet/#getparametrorequisicao","title":"<code>getParametroRequisicao</code>","text":"<p>Este m\u00e9todo retorna o conteudo de um par\u00eametro enviado ao Servlet via URL.</p> <p>Argumentos:</p> Tipo Descri\u00e7\u00e3o String Nome do par\u00e2metro Exemplo <pre><code>// URL: https://endereco.sam/caminhoServlet?id_registro=12345\ndef id_registro = getParametroRequisicao(\"id_registro\")\n</code></pre>"},{"location":"tiposProcessos/","title":"Tipos de Processos","text":"<p>Abaixo voc\u00ea entender\u00e1 melhor sobre alguns processos que podem ser customizados no SAM.</p>"},{"location":"tiposProcessos/#extracao-de-dados","title":"Extra\u00e7\u00e3o de dados","text":"<p>O processo de Extra\u00e7\u00e3o de dados consiste em se comunicar com bancos de dados para capturar os dados que ser\u00e3o disponibilizados para o sistema destino. Toda a extra\u00e7\u00e3o de informa\u00e7\u00f5es da base de dados s\u00e3o atrav\u00e9s de consultas, listagens, relat\u00f3rios, resumos, estat\u00edsticas, demonstra\u00e7\u00f5es, an\u00e1lises, documentos fiscais e n\u00e3o fiscais etc.</p>"},{"location":"tiposProcessos/#listagens","title":"Listagens","text":"<p>As Listagens s\u00e3o documentos que disponibilizam informa\u00e7\u00f5es claras e objetivas de setores da empresa, contando sempre com informa\u00e7\u00f5es atualizadas e confi\u00e1veis, fornecendo dados que s\u00e3o utilizados como base para a tomada de decis\u00e3o e planejamento de a\u00e7\u00f5es. \u00c9 preciso apresentar esses dados em um formato que facilite a interpreta\u00e7\u00e3o. S\u00e3o apresentados em forma de tabelas e comparativos, mas podem ser mais completos e estruturados.</p> <p>Veja alguns exemplos.</p>"},{"location":"tiposProcessos/#cubo-de-decisoes","title":"Cubo de Decis\u00f5es","text":"<p>Esta ferramenta auxilia na tomada de decis\u00e3o da empresa, portanto, \u00e9 importante o desenvolvedor, conhecer este meio mais f\u00e1cil para obter melhores resultados. O Cubo de Decis\u00f5es possibilita visualizar as atividades da empresa de modo gr\u00e1fico e simplificado, bem como, o seu desempenho, potenciais riscos ou desvios do planejado e a capacidade de obter indicadores de gest\u00e3o.</p> <p>Veja alguns exemplos.</p>"},{"location":"tiposProcessos/#gedgets","title":"Gedgets","text":"<p>Gadgets s\u00e3o elementos que possuem uma fun\u00e7\u00e3o, adicionar conte\u00fado extra ao painel do SAMERP. Por exemplo, gadgets podem realizar consultas no banco de dados e exibir o conte\u00fado em forma de gr\u00e1ficos, listas, \u00edcones e muito mais. Os gadgets s\u00e3o constru\u00eddos a partir de um c\u00f3digo HTML, podendo usar CSS e Javascript, e tamb\u00e9m em Groovy. Os gadgets podem ser colocados em qualquer lugar do painel, na realidade, tudo que voc\u00ea precisa fazer \u00e9 arrastar e soltar o gadget at\u00e9 a \u00e1rea escolhida.</p> <p>Veja alguns exemplos.</p>"},{"location":"tiposProcessos/#regras-de-negocios","title":"Regras de Neg\u00f3cios","text":"<p>Regras de neg\u00f3cio s\u00e3o padr\u00f5es que condicionam o funcionamento do neg\u00f3cio, sendo comumente aplicadas no contexto da arquitetura de softwares. Voc\u00ea pode escrever suas regras de neg\u00f3cio atrav\u00e9s de f\u00f3rmulas, interceptadores ou scripts de opera\u00e7\u00f5es, possibilitando produzir ou validar dados que venham dar respostas, mais adequadas \u00e0 gest\u00e3o de seus neg\u00f3cios.</p>"},{"location":"tiposProcessos/#formulas","title":"F\u00f3rmulas","text":"<p>Uma f\u00f3rmula \u00e9 um m\u00e9todo pr\u00e1tico de resolver um assunto, dar instru\u00e7\u00f5es ou expressar uma opera\u00e7\u00e3o. Em algumas tarefas do SAM4 o processamento de dados pode ser feito de forma customizada, ou seja, cada empresa pode processar livremente. Essas customiza\u00e7\u00f5es s\u00e3o feitas atrav\u00e9s das f\u00f3rmulas. Por exemplo, c\u00e1lculo de documentos, c\u00e1lculo de folha de pagamento, manipula\u00e7\u00e3o de valores de itens no estoque.</p> <p>Veja  alguns exemplos.</p>"},{"location":"tiposProcessos/#interceptacao","title":"Intercepta\u00e7\u00e3o","text":"<p>Interceptor, como o pr\u00f3prio nome sugere, nos permite de forma bem simples interceptar e configurar requisi\u00e7\u00f5es antes delas serem disparadas para o banco de dados. Isso possibilita fazer uma imensid\u00e3o de coisas, um exemplo seria validar se a requisi\u00e7\u00e3o est\u00e1 de acordo com os padr\u00f5es de cadastro de uma determinada empresa, ou de repente bloquear determinados usu\u00e1rio de realizar estas requisi\u00e7\u00f5es, e at\u00e9 tratar objetos antes de terminar a requisi\u00e7\u00e3o. As possibilidades s\u00e3o in\u00fameras.</p> <p>Veja alguns exemplos.</p>"},{"location":"tiposProcessos/#scripts-de-operacoes","title":"Scripts de Opera\u00e7\u00f5es","text":"<p>Dentre os Script do SAM o Script de Opera\u00e7\u00f5es \u00e9 o \u00fanico que n\u00e3o \u00e9 desenvolvido pela ferramenta SAMDEV, ele \u00e9 constru\u00eddo dentro da pr\u00f3pria tarefa. Com ele o desenvolvedor pode criar regras operacionais diferentes para cada tarefa, manipular campos da tela, fazer valida\u00e7\u00f5es etc. Basicamente o desenvolvedor consegue manipular toda a tarefa. As telas do SAM s\u00e3o constru\u00eddas em JAVA com SWING, Swing \u00e9 um widget toolkit GUI para uso com o Java. Ele possui alguns componentes como, Campo texto, campo num\u00e9rico, campo combo, etc. Cada um destes componentes possuem algumas propriedades que podem ser alteradas para configurar tamanho, largura, altura, cor, fonte, etc.</p> <p>Veja alguns exemplos.</p>"},{"location":"tiposProcessos/#integracao-com-o-sam","title":"Integra\u00e7\u00e3o com o SAM","text":"<p>A integra\u00e7\u00e3o com o SAM pode ser realizada fazendo ou recebendo requisi\u00e7\u00f5es de outros sistemas, APIs, servi\u00e7os etc. Essa integra\u00e7\u00e3o pode ser realizado atrav\u00e9s das SERVLETS.</p>"},{"location":"tiposProcessos/#servlets","title":"Servlets","text":"<p>Uma Servlet d\u00e1 uma ideia de servidor pequeno cujo objetivo basicamente \u00e9 receber requisi\u00e7\u00f5es HTTP, process\u00e1-las e responder ao cliente, essa resposta pode ser um JSON, um HTML, uma imagem etc.</p> <p>Veja alguns exemplos.</p>"},{"location":"exemplos/scripts/","title":"Exemplos Script de Opera\u00e7\u00e3o","text":""},{"location":"exemplos/scripts/#ocultar-coluna-da-spread","title":"Ocultar coluna da spread","text":"<p>Ocultando algumas colunas da spread, o metodo ocultarColunas recebe a spread e os indices das colunas a serem ocultadas</p> <p>Aten\u00e7\u00e3o</p> <p>Este script somente OCULTA a coluna, sendo assim \u00e9 necess\u00e1rio considerar a mesma na contagem do indice</p> <pre><code>    @Override\n    public void execute(MultitecRootPanel tarefa) {\n        MSpread sprEaa0103s = getComponente(\"sprEaa0103s\");\n        ocultarColunas(sprEaa0103s, 0, 1, 2, 3, 4, 5);\n    }\n</code></pre>"},{"location":"exemplos/scripts/#ocultar-campo-livre-da-spread","title":"Ocultar campo livre da spread","text":"<p>Adiciona um evento ao perder o foco do campo de <code>tipo de documento</code>, pode ser alterado para outro campo ou evento, para remover um campo livre da spread.</p> <p>Aten\u00e7\u00e3o</p> <p>Sempre passar o nome do campo no banco (Ex.: eaa01json) seguido de . (ponto) e o nome do campo livre</p> <pre><code> @Override\n    public void execute(MultitecRootPanel tarefa) {\n        MNavigationController nvgAah01codigo = getComponente(\"nvgAah01codigo\");\n        nvgAah01codigo.addFocusListener(new FocusAdapter() {\n            @Override\n            public void focusLost(FocusEvent e) {\n                MSpread sprEaa0103s = getComponente(\"sprEaa0103s\");\n                ocultarColunas(sprEaa0103s, \"eaa0103json.vlr_total_docum\", \"\", \"\");\n            }\n        });\n    }\n</code></pre>"},{"location":"exemplos/scripts/#alterar-tamanho-da-tela","title":"Alterar tamanho da tela","text":"<p>Altera o tamanho da tela, largura e altura.</p> <pre><code>    @Override\n    public void execute(MultitecRootPanel tarefa) {\n        Window tela = tarefa.getWindow();\n        tela.setBounds((int) tela.getBounds().x, (int) tela.getBounds().y, (int) tela.getBounds().width, (int) tela.getBounds().height + 50);\n    }\n</code></pre>"},{"location":"exemplos/scripts/#sobreescrever-metodo-windowload","title":"Sobreescrever metodo windowLoad","text":"<p>O metodo windowLoad \u00e9 executado no momento que a tela est\u00e1 sendo carregada, algumas altera\u00e7\u00f5es  em tela precisam ser feitas ap\u00f3s esse metodo.</p> <p>Aten\u00e7\u00e3o</p> <p>Lembre-se de sempre executar o windowLoad original antes do seu codigo</p> <pre><code>public class Script extends sam.swing.ScriptBase{\n    public Runnable  windowLoadOriginal;\n\n    @Override\n    public void execute(MultitecRootPanel tarefa) {\n        this.windowLoadOriginal = tarefa.windowLoad ;\n        tarefa.windowLoad = {novoWindowLoad()};\n    }\n\n    protected void novoWindowLoad(){\n        this.windowLoadOriginal.run();\n        // Execute seu codigo aqui, valida\u00e7\u00e3o, altera\u00e7\u00e3o etc...\n    }\n}\n</code></pre>"},{"location":"exemplos/scripts/#sobreescrever-metodo-cancelar","title":"Sobreescrever metodo cancelar","text":"<p>Sobrescrever o metodo cancelar de uma tela. Podendo ser usado para valida\u00e7\u00f5es ou processar dados.</p> <p>Aten\u00e7\u00e3o</p> <p>Lembre-se de sempre executar o cancelar original depois do seu codigo</p> <pre><code>public class Script extends sam.swing.ScriptBase{\n    public Runnable  cancelarOriginal;\n\n    @Override\n    public void execute(MultitecRootPanel tarefa) {\n        this.cancelarOriginal = tarefa.cancelar;\n        tarefa.cancelar = {novoCancelar()};\n    }\n\n    protected void novoCancelar(){\n        throw new ValidacaoException(\"Valida\u00e7\u00e3o ao cancelar\")\n        this.cancelarOriginal.run()\n    }\n}\n</code></pre>"},{"location":"exemplos/scripts/#abrir-uma-outra-tarefa","title":"Abrir uma outra tarefa","text":"<p>Pode abrir uma nova tarefa ao disparar algum evento, clique em um bot\u00e3o ou alguma condi\u00e7\u00e3o.</p> <pre><code>public class Script  extends sam.swing.ScriptBase{\n    private MultitecRootPanel tarefa;\n\n    @Override\n    public void execute(MultitecRootPanel tarefa) {\n        this.tarefa = tarefa;\n    }\n\n    private void abrirTarefaSCV2002() {\n        try {\n            SCV2002 scv2002 = new SCV2002();\n            WindowUtils.createJDialog(scv2002.getWindow(), scv2002);\n            scv2002.open.run();\n        } catch (Exception err) {\n            ErrorDialog.defaultCatch(this.tarefa.getWindow(), err);\n        }\n    }\n}\n</code></pre>"},{"location":"exemplos/scripts/#alterar-funcao-f5-da-spread","title":"Alterar fun\u00e7\u00e3o F5 da spread","text":"<p>\u00c9 poss\u00edvel executar uma fun\u00e7\u00e3o ap\u00f3s o F5 em uma spread, servindo para validar ou preencher algum campo de forma automatica.</p> <pre><code>class Script  extends sam.swing.ScriptBase{\n    @Override\n    public void execute(MultitecRootPanel tarefa) {\n        MSpread sprAbe0101s = getComponente(\"sprAbe0101s\");\n        sprAbe0101s.f5Consumer = sprAbe0101s.f5Consumer.andThen({f5Consumer()});\n    }\n\n    public Consumer&lt;Integer&gt; f5Consumer() {\n        MSpread sprAbe0101s = getComponente(\"sprAbe0101s\");\n        MTextFieldString txtAbe01ni = getComponente(\"txtAbe01ni\");\n        MTextFieldString txtAbe01ie = getComponente(\"txtAbe01ie\");\n\n        sprAbe0101s.setValueAt(txtAbe01ni.getValue(), 0, \"abe0101ni\");\n        sprAbe0101s.setValueAt(txtAbe01ie.getValue(), 0, \"abe0101ie\");\n    }\n}\n</code></pre>"},{"location":"exemplos/scripts/#desabilitar-campo-de-navegacao","title":"Desabilitar campo de navega\u00e7\u00e3o","text":"<p>Desabilitando campo de navega\u00e7\u00e3o</p> <pre><code>private void desabilitarTipo(Eaa01 eaa01){\n    MNavigation nvgAah01codigo = getComponente(\"nvgAah01codigo\");\n    nvgAah01codigo.setEnabled(false);\n    nvgAah01codigo.setEditable(false);\n}\n</code></pre>"},{"location":"exemplos/scripts/#adicionar-funcao-no-menu-cancelar","title":"Adicionar fun\u00e7\u00e3o no menu cancelar","text":"<p>Adiciona uma nova fun\u00e7\u00e3o na op\u00e7\u00e3o cancelar alem da fun\u00e7\u00e3o default.</p> <pre><code>class Script extends sam.swing.ScriptBase{\n    @Override\n    public void execute(MultitecRootPanel tarefa) {\n        tarefa.getWindow().getJMenuBar().getMnuArquivo().getMniCancelar().addActionListener(mnu -&gt; this.mniCancelarActionListener(mnu));\n    }\n\n    protected void mniCancelarActionListener(ActionEvent evt) {\n        if(!exibirQuestao(\"Deseja realmente sair sem SALVAR?\")) interromper(\"Por favor salvar antes de SAIR.\");\n    }\n}\n</code></pre>"},{"location":"exemplos/scripts/#sobreescrever-keylistener-de-componentes","title":"Sobreescrever KeyListener de componentes","text":"<p>\u00c9 poss\u00edvel sobreescrever o KeyListener de um determinado componente.</p> <p>Aten\u00e7\u00e3o</p> <p>Lembre-se de sempre executar o KeyListener original antes ou depois do seu codigo.</p> <pre><code>class Script extends sam.swing.ScriptBase{\n    private KeyListener[] keyListenersOriginais\n\n    @Override\n    public void execute(MultitecRootPanel tarefa) {\n        MTextFieldString txtColetar = getComponente(\"txtColetar\");\n        this.keyListenersOriginais = txtColetar.getKeyListeners();\n        if(this.keyListenersOriginais != null &amp;&amp; this.keyListenersOriginais.size() &gt; 0){\n            for(KeyListener listener in this.keyListenersOriginais){\n                txtColetar.removeKeyListener(listener)\n            }\n        }\n        txtColetar.addKeyListener(new KeyAdapter() {\n            @Override\n            public void keyPressed(KeyEvent e) {\n                if(e.getKeyCode() == KeyEvent.VK_ENTER) {\n                    keyListenerCustom(e);\n                }\n            }\n        });\n\n    }\n\n    public void keyListenerCustom(KeyEvent event){\n        //Realize sua logica aqui antes do KeyListener original\n        if(this.keyListenersOriginais != null &amp;&amp; this.keyListenersOriginais.size() &gt; 0){\n            for(KeyListener listener in this.keyListenersOriginais){\n                listener.keyPressed(event)\n            }\n        }\n        //Realize sua logica aqui depois do KeyListener original\n    }\n}\n</code></pre>"},{"location":"exemplos/scripts/#desabilita-campo-livre","title":"Desabilita campo livre","text":"<pre><code>class DesabilitarCampoLivre extends sam.swing.ScriptBase{\n    def exibirRegistroPadrao;\n\n    public void execute(MultitecRootPanel tarefa) {\n        this.exibirRegistroPadrao = tarefa.exibirRegistro\n        tarefa.exibirRegistro = {exibir(tarefa)}\n    }\n\n    private void exibir(MultitecRootPanel tarefa){\n        this.exibirRegistroPadrao.accept(tarefa.registro)\n\n        def pnlCamposLivresJSON = getComponente(\"pnlCamposLivresJSON\");\n        def jsonPanels = pnlCamposLivresJSON.getJsonComponentPanels();\n\n        for (jsonPanel in jsonPanels) {\n            def nomeCampo = jsonPanel.getComponent().getName(); \n            if(nomeCampo == \"texto\") {\n                jsonPanel.getComponent().getComponent().setEnabled(false);\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"exemplos/servlet/","title":"Exemplo Servlet","text":"<p>Faremos um Servlet para buscar uma entidade pelo c\u00f3digo recebido pelo corpo da requisi\u00e7\u00e3o.</p>"},{"location":"exemplos/servlet/#criando-um-servlet","title":"Criando um servlet","text":"<p>Para criar um servlet abra o SAMDev, escolha o package, clique com o <code>bot\u00e3o direito</code>-&gt;<code>Novo</code>-&gt;<code>Servlet</code></p> <p></p> <p>Criar\u00e1 uma classe padr\u00e3o</p> <pre><code>public class BuscarEntidade extends ServletBase {\n\n    @Override\n    public String getNome() throws Exception {\n        return null;\n    }\n\n    @Override\n    public DashboardMetadata getMetadata() throws Exception {\n        return null;\n    }\n\n    @Override\n    public ResponseEntity&lt;Object&gt; executar() {\n        return ResponseEntity.ok()\n            .contentType(MediaType.APPLICATION_JSON)\n            .body(null);\n    }\n}\n</code></pre> <ul> <li><code>getNome</code> : Retorna o nome do Servlet.</li> <li><code>getMetadata</code> : Retorna dados do Servlet.</li> <li><code>executar</code> : fun\u00e7\u00e3o onde ficar\u00e1 a logica do Servlet.</li> </ul>"},{"location":"exemplos/servlet/#buscando-a-entidade","title":"Buscando a entidade","text":"<p>Vamos alterar o metodo executar para receber o c\u00f3digo, buscar a enidade e retornar a entidade pelo response da requisi\u00e7\u00e3o.</p> <pre><code>class BuscarEntidade extends ServletBase{\n    @Override\n    String getNome() throws Exception {\n        return \"Buscar Entidade\"\n    }\n\n    @Override\n    DashboardMetadata getMetadata() throws Exception {\n        return null\n    }\n\n    @Override\n    ResponseEntity&lt;Object&gt; executar() throws Exception {\n        String req = httpServletRequest.getReader().lines().collect(Collectors.joining());\n        TableMap body = JSonMapperCreator.create().read(req, new TypeReference&lt;TableMap&gt;() {});\n\n        String abe01codigo = body.getString(\"abe01codigo\");\n\n       Abe01 abe01 = getSession().createCriteria(Abe01.class)\n                .addFields(\"abe01id, abe01codigo, abe01na\")\n                .addWhere(Criterions.eq(\"abe01codigo\", abe01codigo))\n                .get(ColumnType.ENTITY)\n\n        return ResponseEntity.ok()\n                .contentType(MediaType.APPLICATION_JSON)\n                .body(abe01);\n    }\n}\n</code></pre> <ul> <li> <p><code>httpServletRequest.getReader().lines().collect(Collectors.joining());</code> : Le todo o conte\u00fado do corpo da requisi\u00e7\u00e3o HTTP (geralmente enviado via POST ou PUT) como uma \u00fanica String. </p> </li> <li> <p><code>TableMap body = JSonMapperCreator.create().read(req, new TypeReference&lt;TableMap&gt;() {});</code> : Fazer o parse do JSON (contido na string req) para um objeto da classe TableMap.</p> </li> </ul>"},{"location":"exemplos/servlet/#acessando-o-servlet","title":"Acessando o Servlet","text":""},{"location":"exemplos/servlet/#acessando-via-insomnia","title":"Acessando via Insomnia","text":"<p>Realizando uma request para o servler usando um programa externo como o Insomnia</p> Request e HeaderRetorno <p> </p> <p></p>"},{"location":"exemplos/servlet/#acessando-via-script-de-operacoes","title":"Acessando via Script de opera\u00e7\u00f5es","text":"ScriptRetorno <pre><code>public class ScriptAntigo extends ScriptBase {\n    MultitecRootPanel tarefa\n    @Override\n    void execute(MultitecRootPanel panel) {\n        tarefa = panel\n        criarMenu(\"Servlet\", \"Buscar Entidade\", e -&gt; buscarEntidade(), null)\n    }\n\n    private void buscarEntidade(){\n        String json = '{\"abe01codigo\": \"01\"}'\n        ObjectMapper mapper = new ObjectMapper();\n        JsonNode body = mapper.readTree(json);\n        WorkerRequest.create(this.tarefa.getWindow())\n        .initialText(\"Buscando Entidade\")\n        .dialogVisible(true)\n        .controllerEndPoint(\"servlet\")\n        .methodEndPoint(\"run\")\n        .param(\"name\", \"equilibrio.separador.BuscarEntidade\")\n        .header(\"ignore-body-decrypt\", \"true\")\n        .parseBody(body)\n        .success((response) -&gt; {\n            Abe01 abe01 = response.parseResponse(new TypeReference&lt;Abe01&gt;(){});\n            exibirInformacao(\"codigo: \" + abe01.abe01codigo + \", na: \" + abe01.abe01na)\n        })\n        .post();\n\n    }\n}\n</code></pre>"}]}